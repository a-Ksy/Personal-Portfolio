{"version":3,"sources":["Container.scss","Navbar.scss","../../sass/_variables.scss","Button.scss","../../sass/breakpoints.scss","Landing.scss","About.scss","SmallCard.scss","Skills.scss","Card.scss","Experience.scss","Projects.scss","Contact.scss","App.scss"],"names":[],"mappings":"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","file":"main.2a45fb8d.chunk.css","sourcesContent":["@import \"../../sass/breakpoints\";\r\n\r\n.container-lg {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n@include media (\">=desktop\") {\r\n    .container-lg {\r\n        max-width: 1440px!important;\r\n    }\r\n}\r\n\r\n","@import \"../../sass/variables\";\r\n@import \"../../sass/breakpoints\";\r\n\r\n.navbar {\r\n    padding: 1.5rem;\r\n    padding-top: 1rem;\r\n    \r\n    .nav-item {\r\n      font-family: \"ProximaNovaBold\";\r\n      font-size: 1.2rem;\r\n      margin-left: 1.5rem;\r\n      color: $paragraph!important;\r\n    }\r\n\r\n    a:hover {\r\n      text-decoration: none;\r\n    }\r\n\r\n    .active .nav-item{\r\n      color: $primary!important;\r\n    }\r\n\r\n    .navbar-toggler {\r\n      padding:0;\r\n      border: none;\r\n      color: $paragraph;\r\n    }\r\n\r\n}\r\n\r\n  .bg-custom {\r\n    background-color: $background!important;\r\n    padding: 1rem 2rem 1rem 2rem;\r\n\r\n  }\r\n\r\n@include media (\"<collapse\") {\r\n\r\n  .navbar {\r\n    .nav-item {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n}","$background: #fffffe;\r\n$headline: #0d0d0d;\r\n$paragraph: #2a2a2a;\r\n$primary: #6246ea;\r\n$secondary: #d1d1e9;\r\n$tertiary: #e45858;\r\n$boxShadow:0 10px 20px rgba(0,0,0,0.19), 0 3px 3px rgba(0,0,0,0.15);\r\n$boxShadow2: 0 5px 10px rgba(0,0,0,0.19), 0 3px 3px rgba(0,0,0,0.15);\r\n\r\n\r\n:export {\r\n  background: $background;\r\n  headline: $headline;\r\n  paragraph: $paragraph;\r\n  primary: $primary;\r\n  secondary: $secondary;\r\n  tertiary: $tertiary;\r\n}\r\n","@import \"../../sass//variables\";\r\n@import \"../../sass//breakpoints.scss\";\r\n\r\n.Button {\r\n    background-color: $primary;\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n    color: $background;\r\n    font-size: 1.5rem;\r\n    border: none;\r\n    outline: none;\r\n    transition: 0.3s ease;\r\n\r\n\r\n}\r\n\r\n@include media (\"<=tablet\") {\r\n    .Button {\r\n        font-size: 1.4rem;\r\n    }\r\n}\r\n\r\n@include media (\"<=phone\") {\r\n    .Button {\r\n        font-size: 1rem;\r\n    }\r\n}\r\n.Button:hover {\r\n      box-shadow: $boxShadow;\r\n}\r\n\r\n\r\nbutton:active, button:focus, button:hover {\r\n    outline:none;\r\n    border: none;\r\n}","$breakpoints: (\r\n  \"phone\": 360px,\r\n  \"tablet\": 768px,\r\n  \"collapse\": 990px,\r\n  \"desktop\": 1366px,\r\n  \"LGdesktop\": 1920px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\"\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\"\r\n  )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}","@import \"../../sass/variables\";\r\n@import \"../../sass/breakpoints.scss\";\r\n\r\n.Landing {\r\n    height: 100vh;\r\n    width: 100%;\r\n    font-family: \"ProximaNovaBold\";\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: $paragraph;\r\n    \r\n    .LandingTitle {\r\n        font-size: 5rem;\r\n        width: 100%;\r\n        margin-bottom: 2rem;\r\n        transition: 0.3s ease;\r\n    }\r\n    \r\n    @include media (\"<=desktop\") {\r\n        .LandingTitle {\r\n            font-size: 4rem;\r\n        }\r\n    }\r\n\r\n    @include media (\"<=tablet\") {\r\n        .LandingTitle {\r\n            font-size: 2.75rem;\r\n        }\r\n    }\r\n\r\n    @include media (\"<=phone\") {\r\n        .LandingTitle {\r\n            font-size: 2rem;\r\n        }\r\n    }\r\n}\r\n\r\n","@import \"../../sass/variables\";\r\n@import \"../../sass/breakpoints.scss\";\r\n\r\n.About {\r\n    height: 100vh;\r\n    font-family: \"ProximaNovaBold\";\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: $paragraph;\r\n    \r\n    .AboutTitle {\r\n        font-size: 5rem;\r\n        width: 100%;\r\n        margin-bottom: 2rem;\r\n        transition: 0.3s ease;\r\n    }\r\n\r\n    .AboutParagraph {\r\n        font-size: 1.3rem;\r\n        font-family: \"ProximaNova\";\r\n        text-align: justify;\r\n        transition: 0.3s ease;\r\n        margin:0;\r\n    }\r\n    \r\n    @include media (\"<=desktop\") {\r\n      .AboutTitle {\r\n          font-size: 4rem;\r\n      }\r\n\r\n      .AboutParagraph {\r\n          font-size: 1.3rem;\r\n      }\r\n    }\r\n\r\n    @include media (\"<=collapse\") {\r\n      .myImage {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    @include media (\"<=tablet\") {\r\n      .AboutTitle {\r\n          font-size: 2.75rem;\r\n      }\r\n\r\n      .AboutParagraph {\r\n          font-size: 1.25rem;\r\n      }\r\n    }\r\n\r\n    @include media (\"<=phone\") {\r\n      .AboutTitle {\r\n          font-size: 2rem;\r\n      }\r\n\r\n      .AboutParagraph {\r\n          font-size: 1rem;\r\n      }\r\n    }\r\n}\r\n\r\n","@import \"../../sass/variables\";\r\n@import \"../../sass/breakpoints.scss\";\r\n\r\n.SmallCard {\r\n    padding: 0.75rem 0.5rem;\r\n    border-radius: 5px;\r\n    font-size: 0.9rem;\r\n    font-family: \"ProximaNovaBold\";\r\n    border: 3px solid $headline;\r\n    max-width: 100%;\r\n    margin-right: 0.8%;\r\n    margin-bottom: 0.5rem;\r\n\r\n    p {\r\n        margin:0;\r\n    }\r\n\r\n}","@import \"../../sass/variables\";\r\n@import \"../../sass/breakpoints.scss\";\r\n\r\n.Skills {\r\n    min-height: 100vh;\r\n    width: 100%;\r\n    display: inline-block;\r\n    font-family: \"ProximaNovaBold\";\r\n    color: $paragraph;\r\n\r\n\r\n  .SkillType {\r\n    width: 100%;\r\n    font-size: 1.1rem;\r\n    margin: 1.5rem 0 0.5rem 0;\r\n  }\r\n\r\n\r\n  .SkillsTitle {\r\n        font-size: 5rem;\r\n        width: 100%;\r\n        margin-bottom: 2rem;\r\n        transition: 0.3s ease;\r\n    }\r\n    \r\n  @include media (\"<=desktop\") {\r\n    .SkillsTitle {\r\n        font-size: 4rem;\r\n    }\r\n  }\r\n\r\n  @include media (\"<=tablet\") {\r\n    .SkillsTitle {\r\n        font-size: 2.75rem;\r\n    }\r\n  }\r\n\r\n  @include media (\"<=phone\") {\r\n    .SkillstTitle {\r\n        font-size: 2rem;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}","@import \"../../sass//variables\";\r\n\r\n.card {\r\n  padding: 2.5rem;\r\n  border-radius: 3px;\r\n  width: 100%;\r\n  margin: 2rem 0 0 0;\r\n  border: none;\r\n  background-color: $secondary;\r\n\r\n  a:hover {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .TitleRow {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  .card-title {\r\n    font-size: 2rem;\r\n    color: $headline;\r\n  }\r\n\r\n  .card-subtitle {\r\n    font-size: 1.4rem;\r\n    margin-bottom: 1.5rem;\r\n    font-family: \"ProximaNova\";\r\n    color: $headline;\r\n  }\r\n\r\n  .card-date {\r\n    font-size: 1.1rem;\r\n    font-family: \"ProximaNova\";\r\n    color: $paragraph; \r\n  }\r\n\r\n  .card-place {\r\n    font-size: 1.1rem;\r\n    font-family: \"ProximaNova\";\r\n    color: $paragraph;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  .card-body {\r\n    padding: 0;\r\n  }\r\n\r\n  .card-details {\r\n    color: $tertiary;\r\n    font-size: 1.2rem;\r\n    margin:0;\r\n  }\r\n\r\n  .card-text {\r\n    font-size: 1.1rem;\r\n    font-family: \"ProximaNova\";\r\n    color: $paragraph;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  .practicedSkills {\r\n    margin-bottom: 0.5rem;\r\n    margin-top: 0.5rem;\r\n    color: $paragraph;\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n  .experienceSkill {\r\n    color: $background;\r\n    background-color: $primary;\r\n    padding: 0.5rem;\r\n    text-align: center;\r\n    margin-bottom: 1rem;\r\n    border-radius: 3px;\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n\r\n}","@import \"../../sass/variables\";\r\n@import \"../../sass/breakpoints.scss\";\r\n\r\n.Experience {\r\n    min-height: 100vh;\r\n    width: 100%;\r\n    font-family: \"ProximaNovaBold\";\r\n    padding-top: 5rem;\r\n    display: inline-block;\r\n    color: $paragraph;\r\n\r\n\r\n    .ExperienceTitle {\r\n        font-size: 5rem;\r\n        width: 100%;\r\n        margin-bottom: 2rem;\r\n        transition: 0.3s ease;\r\n    }\r\n\r\n   \r\n    \r\n    @include media (\"<=desktop\") {\r\n      .ExperienceTitle {\r\n          font-size: 4rem;\r\n      }\r\n    }\r\n\r\n    @include media (\"<=tablet\") {\r\n      .ExperienceTitle {\r\n          font-size: 2.75rem;\r\n      }\r\n    }\r\n\r\n    @include media (\"<=phone\") {\r\n      .ExperienceTitle {\r\n          font-size: 2rem;\r\n      }\r\n\r\n    }\r\n}\r\n\r\n","@import \"../../sass/variables\";\r\n@import \"../../sass/breakpoints.scss\";\r\n\r\n.Projects {\r\n    min-height: 100vh;\r\n    width: 100%;\r\n    font-family: \"ProximaNovaBold\";\r\n    padding-top: 5rem;\r\n    display: inline-block;\r\n    color: $paragraph;\r\n\r\n     .ProjectsTitle {\r\n        font-size: 5rem;\r\n        width: 100%;\r\n        margin-bottom: 2rem;\r\n        transition: 0.3s ease;\r\n    }\r\n\r\n    .row {\r\n        height: inherit;\r\n    }\r\n\r\n    .Project {\r\n        border-radius: 3px;\r\n        background-color: $secondary;\r\n        padding: 2.5rem;\r\n        margin: 4rem 0 0 0;\r\n    }\r\n\r\n    .ProjectTitle {\r\n        font-size: 2rem;\r\n    }\r\n\r\n    .ProjectDate {\r\n        font-size: 1.3rem;\r\n        color: $paragraph;\r\n        font-family: \"ProximaNova\";\r\n    }\r\n\r\n    .ProjectParagraph {\r\n        font-size: 1.1rem;\r\n        font-family: \"ProximaNova\";\r\n        color: $paragraph;\r\n        margin-bottom: 1.5rem;\r\n    }\r\n\r\n    a {\r\n        color: $tertiary;\r\n        font-size: 1.2rem;\r\n    }\r\n\r\n    a:hover {\r\n        text-decoration: none;\r\n    }\r\n   \r\n    img {\r\n        border-radius: 3px;\r\n        padding-left: 2rem;\r\n        padding-top: 1rem;\r\n    }\r\n    \r\n    @include media (\"<=desktop\") {\r\n      .ProjectsTitle {\r\n          font-size: 4rem;\r\n      }\r\n    }\r\n\r\n    @include media(\"<=collapse\") {\r\n        img {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    @include media (\"<=tablet\") {\r\n      .ProjectsTitle {\r\n          font-size: 2.75rem;\r\n      }\r\n    }\r\n\r\n    @include media (\"<=phone\") {\r\n      .ProjectsTitle {\r\n          font-size: 2rem;\r\n      }\r\n\r\n    }\r\n}","@import \"../../sass/variables\";\r\n@import \"../../sass/breakpoints.scss\";\r\n\r\n.Contact {\r\n    height: 100vh;\r\n    width: 100%;\r\n    font-family: \"ProximaNovaBold\";\r\n    padding-top: 5rem;\r\n    display: inline-block;\r\n    color: $paragraph;\r\n    .iconBlock {\r\n        margin-top: 3rem;\r\n        justify-content: space-between;\r\n        width: 70%;\r\n        align-items: center;\r\n    }\r\n\r\n    #socialIcon {\r\n        height: 100px !important;\r\n        width: 100px !important;\r\n        transition: 0.3s ease;\r\n    }\r\n\r\n    #CVIcon {\r\n        height: 100px !important;\r\n        width: 100px !important;\r\n        text-align: center;\r\n        line-height: 6.5rem;\r\n        color: white;\r\n        border-radius: 4rem;\r\n        background-color: $primary;\r\n        font-family: \"ProximaNovaBold\" !important;\r\n        font-size: 2rem;\r\n        transition: 0.3s ease;\r\n    }\r\n\r\n    #CVIcon:hover {\r\n        text-decoration: none;\r\n        color: white;\r\n    }\r\n\r\n    .ContactTitle {\r\n        font-size: 5rem;\r\n        width: 100%;\r\n        margin-bottom: 2rem;\r\n        transition: 0.3s ease;\r\n    }\r\n\r\n    @include media(\"<=desktop\") {\r\n        .ContactTitle {\r\n            font-size: 4rem;\r\n        }\r\n    }\r\n\r\n    @include media(\"<=collapse\") {\r\n        #socialIcon {\r\n            height: 50px !important;\r\n            width: 50px !important;\r\n            margin-right: 2rem !important;\r\n        }\r\n\r\n        #CVIcon {\r\n            height: 50px !important;\r\n            width: 50px !important;\r\n            line-height: 3.5rem;\r\n            font-size: 1.5rem;\r\n            margin-right: 2rem !important;\r\n        }\r\n    }\r\n\r\n    @include media(\"<=tablet\") {\r\n        .ContactTitle {\r\n            font-size: 2.75rem;\r\n        }\r\n        #socialIcon {\r\n            margin-right: 1rem !important;\r\n        }\r\n\r\n        #CVIcon {\r\n            margin-right: 1rem !important;\r\n        }\r\n\r\n        .iconBlock {\r\n            width:100%;\r\n        }\r\n    }\r\n\r\n    @include media(\"<=phone\") {\r\n        .ContactTitle {\r\n            font-size: 2rem;\r\n        }\r\n        .iconBlock {\r\n            justify-content: flex-start;\r\n        }\r\n    }\r\n}\r\n","@import './sass/variables';\r\n\r\n@font-face {\r\n    font-family: \"ProximaNova\";\r\n    src: local(\"ProximaNova\"), url(\"./fonts/ProximaNova-Regular.otf\") format('opentype');\r\n  }\r\n  \r\n@font-face {\r\n  font-family: \"ProximaNovaBold\";\r\n  src: local(\"ProximaNovaBold\"), url(\"./fonts/Proxima Nova Alt Bold.otf\") format('opentype');\r\n}\r\n\r\nbody {\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0;\r\n  font-family: \"ProximaNova\";\r\n  font-size: 16px;\r\n  line-height: 1.8;\r\n  background-color: $background;\r\n  text-align: left;\r\n  overflow-x: hidden;\r\n}\r\n\r\n.row {\r\n  margin:0;\r\n  height: 100%;\r\n}\r\n\r\n.col-lg-3, .col-lg-4, .col-lg-6, .col-lg-12, .col-lg-8 {\r\n  padding-left:0;\r\n  margin:0;\r\n}\r\n\r\n.page {\r\n  margin-bottom: 5rem;\r\n}"]}